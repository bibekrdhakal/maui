~~
~~ The Maven Unit Integration Test Guide (MaUI for short)
~~
~~ Copyright (c) 2011 by SoftwareEntwicklung Beratung Schulung (SoEBeS)
~~ Copyright (c) 2011 by Karl Heinz Marbaise
~~
~~ Licensed to the Apache Software Foundation (ASF) under one or more
~~ contributor license agreements.  See the NOTICE file distributed with
~~ this work for additional information regarding copyright ownership.
~~ The ASF licenses this file to You under the Apache License, Version 2.0
~~ (the "License"); you may not use this file except in compliance with
~~ the License.  You may obtain a copy of the License at
~~
~~    http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.

  ------
  In Module Integration Test Example with different source location
  ------
  Karl Heinz Marbaise
  ------
  1. April 2011
  ------

In Module Integration Test Example with different source location

  In the {{{./it-example.html}previous example}} we had
  located the integration test classes into the same folder as the
  unit tests. Sometimes this might not represent your wishes. If you
  like you can put the integration test sources into a different folder
  like <<<src/it/java>>>.

+--------
.
|-- pom.xml
`-- src
    |-- it
    |   `-- java
    |       `-- com
    |           `-- soebes
    |               `-- maui
    |                   `-- it
    |                       `-- BitMaskIT.java
    |-- main
    |   `-- java
    |       `-- com
    |           `-- soebes
    |               `-- maui
    |                   `-- it
    |                       `-- BitMask.java
    `-- test
        `-- java
            `-- com
                `-- soebes
                    `-- maui
                        `-- it
                            `-- BitMaskTest.java

+--------

  The <<<pom.xml>>> for this integration test example must be changed
  to handle the supplemental source folder <<<src/it/java>>>. This can
  be simply achieved by using the
  {{{http://mojo.codehaus.org/build-helper-maven-plugin/}Build Helper Maven Plugin}}.
  If you need to add supplemental resources for the integration tests
  you have to change the configuration accordingly. The following
  <<<pom.xml>>> snippet will show what you have to add.


%{include|source=it-example-1/pom.xml|snippet=#start}

+--------
<project ...>
  [...]
  <build>
    [...]
     <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <id>add-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/it/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      [...]
  </build>
  [...]
</project>

+--------

  Tip:

  If you like to add the new source folder automatically to your Eclipse
  configuration you need to change the phase from <<<generate-test-resources>>>
  into <<<process-resources>>>. The result of this change is that you will
  see the <<<src/it/java>>> folder as source folder within in Eclipse after
  an <Update Project Configuration> as any other source folders. Furthermore
  it achievable by changing the configuration of Eclipse.

  The execution will be exactly the same as in the previous example.
  This can be done by calling <<<mvn clean verify>>>.
  
%{include|source=it/it-example-1/build-filtered.log|highlight-type=text}

  []

