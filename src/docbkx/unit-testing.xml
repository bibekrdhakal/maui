<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="unit-testing">
  <title>Unit Testing</title>
  
  
  <section id="ut-overview">
    <title>Overview</title>
    <para>The execution of unit tests is controlled by the
    <ulink url="http://maven.apache.org/plugins/maven-surefire-plugin/">Maven Surefire Plugin</ulink>
    which handles the execution of the unit tests within the life-cycle.
    </para>
    <para>
      If you already familiar with <ulink url="http://maven.apache.org">Maven</ulink>
      you know
      <ulink url="http://maven.apache.org/guides/introduction/introduction-to-the-standard-directory-layout.html">where to put the unit tests</ulink>.
      This means your unit tests are located in <filename>src/test/java</filename> and the 
      appropriate resources are located in <filename>src/test/resources</filename>.
<!-- 
* First simple example

  The first {{{./ut-example.html}unit test example}}  will show you a simple project with unit tests and
  how a execution will look like.

  The other examples like the {{{./ut-example-mu.html}unit test multiple usage}} shows how to reuse a classes which
  are defined in src/test/java area.
  
   -->
    </para>
  </section>
  
  <section>
    <title>First Basic Unit Test Example</title>
    <para>Assuming we have the following structure of a simple Java project currently consists
    of a simple class <literal>BitMask.java</literal> and of course the unit test class <literal>BitMaskTest.java</literal>.
    </para>
   
    <example>
      <title>Folder Strucutre of the basic unit test example</title>

      <programlisting>.
|-- pom.xml
`-- src
    |-- main
    |   `-- java
    |       `-- com
    |           `-- soebes
    |               `-- training
    |                   `-- maven
    |                       `-- simple
    |                           `-- BitMask.java
    `-- test
        `-- java
            `-- com
                `-- soebes
                    `-- training
                        `-- maven
                            `-- simple
                                `-- BitMaskTest.java</programlisting>
    </example>

    <para>For the sake of clarity the <literal>pom.xml</literal> excerpt contains only the relevant things. 
    If you don't know what a scope and/or a dependency is, i recommend to take a look into the documentation about
    <ulink url="http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html">dependency mechanism in Maven</ulink>.
    </para>
    <para> In this case we use <ulink url="http://www.junit.org">JUnit</ulink> for writing the unit test.
    This will work as well with <ulink url="http://www.testng.org">TestNG</ulink> if you prefer
    TestNG over JUnit. The following <literal>pom.xml</literal> snippet shows 
    how to add the dependency of JUnit to your project.</para>

    <example>
      <title>POM for Unit Tests</title>
      <programlisting>&lt;project ...&gt;
  [...]
  &lt;dependencies&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;junit&lt;/groupId&gt;
      &lt;artifactId&gt;junit&lt;/artifactId&gt;
      &lt;version&gt;4.8.1&lt;/version&gt;
      &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;
  [...]
  &lt;/dependencies&gt;
  [...]
&lt;/project&gt;</programlisting>
    </example>

    <para>If you like to execute the unit tests of the project, which can simply be
    achieved by calling <command>mvn package</command>, you will get a result like the
    following</para>
    
    <example>
      <title>Execution of the Unit Tests</title>
      <programlisting>[INFO] Scanning for projects...
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building Unit Test :: example 0.1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ unit-test-example ---
[INFO] Deleting /maui/examples/unit-test-example/target
[INFO]
[INFO] --- maven-resources-plugin:2.4.3:resources (default-resources) @ unit-test-example ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /maui/examples/unit-test-example/src/main/resources
[INFO]
[INFO] --- maven-compiler-plugin:2.3.2:compile (default-compile) @ unit-test-example ---
[INFO] Compiling 1 source file to /maui/examples/unit-test-example/target/classes
[INFO]
[INFO] --- maven-resources-plugin:2.4.3:testResources (default-testResources) @ unit-test-example ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /maui/examples/unit-test-example/src/test/resources
[INFO]
[INFO] --- maven-compiler-plugin:2.3.2:testCompile (default-testCompile) @ unit-test-example ---
[INFO] Compiling 1 source file to /maui/examples/unit-test-example/target/test-classes
[INFO]
[INFO] --- maven-surefire-plugin:2.7.2:test (default-test) @ unit-test-example ---
[INFO] Surefire report directory: /maui/examples/unit-test-example/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running com.soebes.training.maven.simple.BitMaskTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.078 sec

Results :

Tests run: 5, Failures: 0, Errors: 0, Skipped: 0

[INFO]
[INFO] --- maven-jar-plugin:2.3.1:jar (default-jar) @ unit-test-example ---
[INFO] Building jar: /maui/examples/unit-test-example/target/unit-test-example-0.1.0-SNAPSHOT.jar
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 4.834s
[INFO] Finished at: Fri Apr 01 20:02:40 CEST 2011
[INFO] Final Memory: 9M/92M
[INFO] ------------------------------------------------------------------------</programlisting>
    </example>
  </section>

  <section>
    <title>This is the second example</title>
    <para>xxx</para>
  </section>  
  
</chapter>

